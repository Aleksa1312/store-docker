services:
  backend:
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
    container_name: medusa-backend
    depends_on:
      - postgres
      - redis
    ports:
      - 9000:9000
    networks:
      - internal
    volumes:
      - uploads:/backend/uploads
    restart: unless-stopped

  postgres:
    image: postgres:16.2-alpine
    ports:
      - 5432
    container_name: medusa-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker
    networks:
      - internal
    volumes:
      - db:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: medusa-redis
    ports:
      - 6379
    networks:
      - internal
    restart: unless-stopped

  meilisearch:
    image: getmeili/meilisearch:v1.8
    container_name: medusa-meilisearch
    ports:
      - 7700:7700
    environment:
      - MEILI_MASTER_KEY=meilisearch
      - MEILI_NO_ANALYTICS=true
      - MEILI_NO_SENTRY=true
    volumes:
      - meilisearch_data:/data.ms
    networks:
      - internal
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile
    container_name: medusa-frontend
    ports:
      - 8000
    depends_on:
      - backend
    networks:
      - internal
    restart: unless-stopped

  caddy:
    image: caddy:2.8-alpine
    container_name: medusa-caddy
    ports:
      - 443:443
      - 9000:9000
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - internal
    restart: unless-stopped

networks:
  internal:
    external: false
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  uploads:
  meilisearch_data:
  db:
    driver: local
